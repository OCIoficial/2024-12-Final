# This is a test plan for the sample task. See the README.md next to this file for more details on
# how to write a test plan.

[Subtask 1 - validators/st1.cpp]
  rand ; gen_random.py 20 20 10
  rand ; gen_random.py 20 20 10

  rand ; gen_random.py 20 20 100
  rand ; gen_random.py 20 20 100

  rand ; gen_random.py 20 20 300
  rand ; gen_random.py 20 20 300

[Subtask 2 - validators/st2.cpp]
  @extends subtask 1

  # You can use `copy` to use sample test cases in the test plan. Here we use a glob pattern
  # to copy multiple files in a single command.
  sample ; copy statement/sample-*.in

  # Use a script to generate a test case programmatically
  rand ; gen_random.py 70 70 10
  rand ; gen_random.py 200 25 10
  rand ; gen_random.py 25 200 10
  rand ; gen_random.py 500 10 10
  rand ; gen_random.py 10 500 10
  rand ; gen_random.py 5000 1 10
  rand ; gen_random.py 1 5000 10

  rand ; gen_random.py 70 70 100
  rand ; gen_random.py 200 25 100
  rand ; gen_random.py 25 200 100
  rand ; gen_random.py 500 10 100
  rand ; gen_random.py 10 500 100
  rand ; gen_random.py 5000 1 100
  rand ; gen_random.py 1 5000 100

  rand ; gen_random.py 70 70 1000
  rand ; gen_random.py 200 25 1000
  rand ; gen_random.py 25 200 1000
  rand ; gen_random.py 500 10 1000
  rand ; gen_random.py 10 500 1000
  rand ; gen_random.py 5000 1 1000
  rand ; gen_random.py 1 5000 1000

  rand ; gen_random.py 5000 1 2500
  rand ; gen_random.py 1 5000 2500

[Subtask 3 - validators/st3.cpp]
  rand ; gen_random.py 1 5000 10
  rand ; gen_random.py 1 10000 10
  rand ; gen_random.py 1 100000 10
  rand ; gen_random.py 1 1000000 10

  rand ; gen_random.py 1 5000 100
  rand ; gen_random.py 1 10000 100
  rand ; gen_random.py 1 100000 100
  rand ; gen_random.py 1 1000000 100

  rand ; gen_random.py 1 5000 1000
  rand ; gen_random.py 1 10000 1000
  rand ; gen_random.py 1 100000 1000
  rand ; gen_random.py 1 1000000 1000

  rand ; gen_random.py 1 100000 10000
  rand ; gen_random.py 1 1000000 10000

  rand ; gen_random.py 1 1000000 100000

[Subtask 4 - validators/st4.cpp]
  @extends subtask 2
  @extends subtask 3

  rand ; gen_random.py 10 100000 10
  rand ; gen_random.py 100 10000 10
  rand ; gen_random.py 1000 1000 10
  rand ; gen_random.py 10000 100 10
  rand ; gen_random.py 100000 10 10

  rand ; gen_random.py 10 100000 100
  rand ; gen_random.py 100 10000 100
  rand ; gen_random.py 1000 1000 100
  rand ; gen_random.py 10000 100 100
  rand ; gen_random.py 100000 10 100

  rand ; gen_random.py 10 100000 1000
  rand ; gen_random.py 100 10000 1000
  rand ; gen_random.py 1000 1000 1000
  rand ; gen_random.py 10000 100 1000
  rand ; gen_random.py 100000 10 1000

  rand ; gen_random.py 10 100000 10000
  rand ; gen_random.py 100 10000 10000
  rand ; gen_random.py 1000 1000 10000
  rand ; gen_random.py 10000 100 10000
  rand ; gen_random.py 100000 10 10000

  rand ; gen_random.py 10 100000 100000
  rand ; gen_random.py 100 10000 100000
  rand ; gen_random.py 1000 1000 100000
  rand ; gen_random.py 10000 100 100000
  rand ; gen_random.py 100000 10 100000
